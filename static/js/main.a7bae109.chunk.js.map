{"version":3,"sources":["Components/Searchbar/Searchbar.js","services/pixabay.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","name","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","window","alert","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","PixabayFetchObj","base_url","api_key","_name","_page","axios","defaults","baseURL","url","page","console","log","get","then","resalt","data","hits","catch","error","ImageGalleryItem","getBigPhoto","photo","alt","photoLage","onClick","src","Button","handleClick","Modal","handleKeyDown","code","onClose","addEventListener","removeEventListener","createPortal","children","document","getElementById","ImageGallery","gallery","status","showModal","newPixabayFetchObj","searchPhotos","r","prev","scrollTo","top","documentElement","scrollHeight","behavior","err","toggleModal","localStorage","setItem","JSON","stringify","prevProps","prevState","length","color","height","width","timeout","map","galleryItem","webformatURL","largeImageURL","tags","id","parse","getItem","App","handleFormSubmit","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a7bae109.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {ImSearch} from 'react-icons/im'\r\n\r\nexport default class Searchbar extends Component{\r\n    state = {\r\n        name: '',\r\n    }\r\n\r\n    handleNameChange = e => {\r\n      this.setState({name: e.currentTarget.value.toLowerCase()})\r\n    }\r\n    \r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.name.trim() === '') {\r\n            window.alert('Введите запрос');\r\n            return;\r\n         }\r\n        this.props.onSubmit(this.state.name);\r\n        // this.setState({\r\n        //     name: ''\r\n        // });\r\n    }    \r\n       \r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                        value={this.state.name}\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        name=\"search\"\r\n                        onChange = {this.handleNameChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n","import axios from 'axios';\r\n\r\nexport default class PixabayFetchObj{\r\n    constructor() {\r\n        this.base_url = `https://pixabay.com/api/`;\r\n        this.api_key = `21301375-7d22153b76338a293f3dc129f`;\r\n        this._name = '';\r\n        this._page = 1;\r\n    }\r\n\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(value) {\r\n        return this._name = value;\r\n    }\r\n\r\n     get page() {\r\n        return this._page;\r\n    }\r\n    set page(value) {\r\n        return this._page = value;\r\n    }\r\n    // создаем метод\r\n    searchPhotos() {\r\n        axios.defaults.baseURL = this.base_url;\r\n       \r\n        let url = `?key=${this.api_key}&q=${this.name}&page=${this.page}&per_page=12&image_type=photo&orientation=horizontalv`;\r\n        console.log(this.page, this.name);\r\n        return axios\r\n            .get(url)\r\n            .then((resalt) => {\r\n                return resalt.data;\r\n            })\r\n            .then((data) => {\r\n                return data.hits;\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n    }\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ getBigPhoto, photo, alt, photoLage }) {\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img onClick = {()=>getBigPhoto(photoLage, alt)} src={photo} alt={alt} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    photo: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    getBigPhoto: PropTypes.func,\r\n    photoLage: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({ handleClick }) {\r\n     return (\r\n        <button className=\"Button\" type=\"button\" onClick={(handleClick)}>Load more</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    handleClick: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component{\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.props.onClose}>\r\n                <div className=\"Modal\">\r\n                    {/* <img src=\"\" alt=\"\" /> */}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modalRoot')\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func,  \r\n};\r\n","import { Component } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport PixabayFetchObj from '../../services/pixabay';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport Modal from '../Modal'\r\n\r\nexport default class ImageGallery extends Component {\r\n    state = {\r\n        gallery: [],\r\n        status: 'init',\r\n        showModal: false,\r\n    }\r\n    \r\n    newPixabayFetchObj = new PixabayFetchObj();\r\n \r\n    componentDidUpdate(prevProps, prevState) {\r\n        // if (prevState.gallery !== this.state.gallery) {\r\n        //     localStorage.setItem('photo', JSON.stringify(this.state.gallery));            \r\n        // }\r\n\r\n        if (prevProps.name !== this.props.name) {\r\n            this.setState({status:'pending'})\r\n            this.newPixabayFetchObj.name = this.props.name;\r\n            this.newPixabayFetchObj.page = 1;\r\n            this.newPixabayFetchObj.searchPhotos().then(r => {\r\n                this.setState({\r\n                    gallery: r,\r\n                    status: 'success'\r\n                })                 \r\n                \r\n                if (this.state.gallery.length === 0) {\r\n                  return  this.setState({\r\n                    status: 'error'\r\n                })\r\n                }\r\n               \r\n            }).catch(err => {\r\n                           this.setState({\r\n                    status: 'error'\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.newPixabayFetchObj.page += 1;\r\n        this.newPixabayFetchObj.searchPhotos().then(r => {\r\n            this.setState((prev) => ({\r\n                gallery: [...prev.gallery, ...r],\r\n                status: 'success'\r\n            })\r\n            )\r\n        }).then(() => window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n        })).catch(err => {\r\n            this.setState({\r\n                status: 'error'\r\n            })\r\n        });\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => (\r\n            { showModal: !state.showModal }\r\n        ))\r\n    }\r\n\r\n    getBigPhoto = (url, alt) => {\r\n        localStorage.setItem('url', JSON.stringify(url));\r\n        localStorage.setItem('alt', JSON.stringify(alt));\r\n        this.toggleModal();\r\n    }\r\n\r\n    render() {\r\n        const { gallery, showModal, status } = this.state;\r\n        const {toggleModal, getBigPhoto, handleClick  } = this;\r\n        \r\n        if (status === 'init') {\r\n         return  <h1>Hello! Search something....</h1>\r\n        }\r\n\r\n        if (status === 'pending') {\r\n         return  <Loader\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000} //3 secs\r\n            />\r\n        }\r\n\r\n        if (status === 'success') {\r\n            return (\r\n                 <>\r\n                     <ul className=\"ImageGallery\">\r\n                         {gallery.length > 0 && gallery.map(galleryItem => (<ImageGalleryItem\r\n                             getBigPhoto={getBigPhoto}\r\n                             key={galleryItem.id}\r\n                             photo={galleryItem.webformatURL}\r\n                             photoLage={galleryItem.largeImageURL}\r\n                             alt={galleryItem.tags}\r\n                         />))}\r\n                     </ul>\r\n                     <Button className=\"BtnMore\" handleClick={() => { handleClick() }} />\r\n                    {showModal && <Modal onClose ={toggleModal}>\r\n                         <img src={JSON.parse(localStorage.getItem('url'))} alt={localStorage.getItem('alt')} />\r\n                    </Modal>}\r\n                 </>\r\n             )\r\n         }\r\n        \r\n        if (status === 'error') {\r\n            return <h2>No results were found for your search.</h2>\r\n        }\r\n    }\r\n}\r\n\r\n ImageGallery.propTypes = {\r\n    name: PropTypes.string,\r\n};\r\n","import { Component } from 'react';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\n\nclass App extends Component{\nstate = {\n  name: '', \n}\n  handleFormSubmit = (name) => {\n    this.setState({ name });\n  };\n  \nrender() {\n  return (\n    <>\n      <Searchbar onSubmit={this.handleFormSubmit} />\n      <ImageGallery name={this.state.name}/>\n    </>\n        \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}